{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAcF,SAASC,cAAc,wBACrCE,EAAaH,SAASC,cAAc,uBACpCG,EAAYJ,SAASC,cAAc,sBAczC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQN,GAERO,EAAOP,E,GAERC,E,IAIFQ,MAAK,SAAAC,GACJC,EAAApB,GAASqB,OAAOC,QAAQ,uBAAwCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAEvEc,OAAM,SAAAC,GACLL,EAAApB,GAASqB,OAAOK,QAAQ,sBAAqCH,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,IAIzER,EAAKyB,iBAAiB,UAAU,SAAAC,GAC9BA,EAAMC,iBAlCa,WAKnB,IAJA,IAAMC,EAASC,OAAO1B,EAAY2B,OAC5BtB,EAAQqB,OAAOzB,EAAW0B,OAC1BC,EAAOF,OAAOxB,EAAUyB,OAErBE,EAAI,EAAGA,EAAIJ,EAAQI,IAG1B1B,EAFiB0B,EAAI,EACAxB,EAAQwB,EAAID,E,CA4BnCE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\n\nconst submitHolder = () => {\n  const amount = Number(amountInput.value);\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const promiseDelay = delay + i * step;\n    createPromise(position, promiseDelay);\n  }\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(position);\n      } else {\n        reject(position);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(result => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(error => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n  submitHolder();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","result","$parcel$interopDefault","Notify","success","concat","catch","error","failure","addEventListener","event","preventDefault","amount","Number","value","step","i","$ce04d3a99e08e73b$var$submitHolder"],"version":3,"file":"03-promises.85f8ec0a.js.map"}